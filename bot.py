from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è Reply Keyboard (–æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç Inline)
def reply_keyboard():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π")],
            [KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")],
        ],
        resize_keyboard=True
    )
    return keyboard

@dp.message(CommandStart())
async def start_cmd(message: Message):
    await message.answer(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω—É–∂–Ω—ã–º –≤—Ä–∞—á–æ–º.\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
        reply_markup=reply_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Reply –∫–Ω–æ–ø–æ–∫ (—Ç–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π)
@dp.message()
async def reply_keyboard_handler(message: Message):
    if message.text == "üìã –°–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π":
        await message.answer("üßæ –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π:", reply_markup=doctor_list())
    elif message.text == "‚ùì –ü–æ–º–æ—â—å":
        await message.answer(
            "‚ùì *–ü–æ–º–æ—â—å*\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É.\n"
            "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –ø–∏—à–∏ —Å—é–¥–∞.",
            parse_mode="Markdown",
            reply_markup=reply_keyboard()
        )
    else:
        await message.answer("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∏–∑ –º–µ–Ω—é.", reply_markup=reply_keyboard())
